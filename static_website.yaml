Parameters:
  
  RootDomainName:
    Description: Website DNS name
    Type: String
    
  HostedZoneName:  
    Description: Route53 HostedZone name for the DNS
    Type: String
  
  SSLCertificateARN:
    Description: This certificate should be located into the us-east-1 region
    Type: String
    
  PricingClass:
    Type: String
    Default: 'PriceClass_All'
    AllowedValues:
      - 'PriceClass_100'
      - 'PriceClass_200'
      - 'PriceClass_All'
    
Resources:
          
  RootBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref RootDomainName
      AccessControl: PublicRead
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          -
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html        
  
  WebsiteLogsBucket:
    Type: AWS::S3::Bucket
    DependsOn: RootBucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          -
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub "${RootDomainName}-websitelogs"
      
  DNSrecordset:
    Type: AWS::Route53::RecordSetGroup
    DependsOn: CloudFrontDistribution
    Properties:
      HostedZoneName: !Ref HostedZoneName
      RecordSets:
      - Name: !Ref RootDomainName
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !GetAtt CloudFrontDistribution.DomainName
        
  S3OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    DependsOn: WebsiteLogsBucket
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Origni Identity for the S3 bucket    
  CloudFrontWebsiteLogsBucketPolicy: 
    Type: AWS::S3::BucketPolicy
    DependsOn: S3OriginAccessIdentity
    Properties: 
      Bucket: !Ref WebsiteLogsBucket
      PolicyDocument: 
        Statement: 
           - 
            Action:            
              - "s3:PutObject"
            Effect: "Allow"
            Resource: !Sub "arn:aws:s3:::${RootDomainName}-websitelogs/*"
            Principal: 
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${S3OriginAccessIdentity}"
           - 
            Action: 
              - "s3:GetBucketAcl"
              - "s3:PutBucketAcl"
            Effect: "Allow"
            Resource: !Sub "arn:aws:s3:::${RootDomainName}-websitelogs"
            Principal: 
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${S3OriginAccessIdentity}"
  CloudFrontRootBucketPolicy: 
    Type: AWS::S3::BucketPolicy
    DependsOn: S3OriginAccessIdentity
    Properties: 
      Bucket: !Ref RootBucket
      PolicyDocument: 
        Statement: 
           - 
            Action: 
              - "s3:GetObject"
            Effect: "Allow"
            Resource: !Sub "arn:aws:s3:::${RootDomainName}/*"
            Principal: 
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${S3OriginAccessIdentity}"

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: CloudFrontRootBucketPolicy 
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !Sub ${RootDomainName}.s3.amazonaws.com
          Id: !Sub S3-${RootDomainName}
          S3OriginConfig:
            OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${S3OriginAccessIdentity}"
        Enabled: 'true'
        DefaultRootObject: index.html
        Logging:
          IncludeCookies: 'false'
          Bucket: !GetAtt WebsiteLogsBucket.DomainName
          Prefix: _website
        Aliases:
          - !Ref RootDomainName
          - !Sub www.${RootDomainName}
        Enabled: true
        HttpVersion: http2
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          TargetOriginId: !Sub S3-${RootDomainName}
          ForwardedValues:
            QueryString: 'false'
          ViewerProtocolPolicy: https-only
        PriceClass: !Ref PricingClass
        ViewerCertificate:
          AcmCertificateArn: !Ref SSLCertificateARN
          MinimumProtocolVersion: TLSv1
          SslSupportMethod: sni-only

Outputs:
  WebsiteURL:
    Value: !Join ['//', ['https:', !Ref RootDomainName]] 
    Description: Static website URL